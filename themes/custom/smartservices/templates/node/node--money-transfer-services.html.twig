{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
<div class="service-details">
	<div class="container service-wrapper pt-5 mb-5">
	  <div class="page-header">
		 <h3 class="text-center">{{ node.title.value }}</h3>
		 <hr class="style9">
	  </div>
		<div class="row service-lists">
			<div class="col-xl-4">
				<div class="details-nav">
					<nav>
						<ul class="nav" id="myTab" role="tablist">
						{% if role_current_user == 'administrator' %}
							{% for servicedetail in node.field_services %}
								<li class="nav-item">
									<a class="nav-link" id="home-tab" data-toggle="tab" href="#{{servicedetail.entity.name.value|lower|replace({' ': '-'})}}" role="tab" aria-controls="home" aria-selected="false">
									<img src="{{file_url(servicedetail.entity.field_service_image.entity.uri.value)}}" class="service-img-thumbnail" /> 
									<span>{{servicedetail.entity.name.value}}</span>
									</a>
								</li>
							{% endfor %}
						{% else %}
							{% for servicedetail in node.field_services %}
								{% for roleservicedetail in service_list_current_user %}
									{% if servicedetail.entity.tid.value == roleservicedetail.current_service_id %}
										<li class="nav-item">
											<a class="nav-link" id="home-tab" data-toggle="tab" href="#{{servicedetail.entity.name.value|lower|replace({' ': '-'})}}" role="tab" aria-controls="home" aria-selected="false">
											<img src="{{file_url(servicedetail.entity.field_service_image.entity.uri.value)}}" class="service-img-thumbnail" /> 
											<span>{{servicedetail.entity.name.value}}</span>
											</a>
										</li>
									{% endif %}
								{% endfor %}
							{% endfor %}
						{% endif %}
						</ul>
					</nav>
				</div>
			</div>
			<div class="col-xl-8 serivce-list-item">
				<div class="single-details">
					<div class="tab-content" id="myTabContent">
						{% for servicedetail in node.field_services %}
						<div class="tab-pane fade" id="{{servicedetail.entity.name.value|lower|replace({' ': '-'})}}" role="tabpanel" aria-labelledby="home-tab">
							<div class="row">
							  {% for operatorlistsitem in operatorlists %}
								  {% if operatorlistsitem.target_id == servicedetail.entity.tid.value %}
									<div class="col-xl-4 col-md-4 operator-list-check">
										<a href="/smartservices/services/{{servicedetail.entity.tid.value}}/{{ operatorlistsitem.tid }}" class="myBtn">
											<div class="single-project">
												<div class="project-thumb">
												{% if operatorlistsitem.image is not empty %}
												<img src="{{ operatorlistsitem.image}}" alt="{{ operatorlistsitem.name }}" class="img-thumbnail"> 
												{% else %}
												<img src="/smartservices/{{ directory }}/img/recharge-default-icon.jpg" alt="{{ operatorlistsitem.name }}" class="img-thumbnail">
												{% endif %}
												</div>
												<div class="project-info">
													<h3>{{ operatorlistsitem.name }}</h3>
												</div>
											</div>
										</a>
									</div>
								  {% endif %}
							  {% endfor %}
							</div>
						</div>
						{% endfor %}
					</div>
				</div>
			</div>
		</div>
	</div>
</div>